sidebartitle: Document REST APIs

folders:

- title: "I: Introduction to REST APIs"
  jurl: /docapis_introtoapis.html
  description: "REST APIs are flourishing in the marketplace, and the web is becoming a mashup of interconnected APIs. REST APIs consist of requests to and responses from a web server. Job prospects are hot for technical writers who can write developer documentation. This course will help you break into API documentation, especially if you complete the many portfolio-building activities."
  class: first
  folderitems:

  - title: Course Overview
    jurl: /index.html

  - title: Workshop video recordings
    jurl: /docapis_course_videos.html

  - title: Workshop agenda, slides, activities
    jurl: /workshop.html

  - title: Why I developed this course
    jurl: /docapis_foreword.html

  - title: About the author
    jurl: /docapis_about_the_author.html

  - title: Introduction to REST API documentation
    jurl: /docapis_intro_to_rest_api_doc.html

  - title: What is a REST API?
    jurl: /docapis_what_is_a_rest_api.html

  - title: "Activity: Identify your goals"
    jurl: /docapis_identify_your_goals.html

- title: "II: Using an API like a developer"
  jurl: /likeadeveloper.html
  description: "Playing a brief role as a developer will help you understand developer needs better, as well as what developers typically look for in API documentation. Developers often use tools such as Postman or curl to make calls. They look at the structure of the response, and they dynamically integrate the needed information into web pages and other applications."
  folderitems:

  - title: Scenario for using a weather API
    jurl: /docapis_scenario_for_using_weather_api.html

  - title: Get authorization keys
    jurl: /docapis_get_auth_keys.html

  - title: "Submit requests through Postman"
    jurl: /docapis_postman.html

  - title: curl intro and installation
    jurl: /docapis_install_curl.html

  - title: "Make a curl call"
    jurl: /docapis_make_curl_call.html

  - title: Understand curl more
    jurl: /docapis_understand_curl.html

  - title: "Activity: Use methods with curl"
    jurl: /docapis_curl_with_petstore.html

  - title: Analyze the JSON response
    jurl: /docapis_analyze_json.html

  - title: Inspect the JSON from the response payload
    jurl: /docapis_json_console.html

  - title: "Access and print a specific JSON value"
    jurl: /docapis_access_json_values.html

  - title: Dive into dot notation
    jurl: /docapis_diving_into_dot_notation.html

- title: "III: Documenting API endpoints"
  jurl: /docendpoints.html
  description: "Reference documentation for API endpoints consists of five general sections: resource descriptions, endpoints and methods, parameters, sample requests, and sample responses and schemas. To document the reference endpoints of an API, provide detailed information for each of these sections."
  folderitems:

  - title: "A new endpoint to document"
    jurl: /docapis_new_endpoint_to_doc.html

  - title: "API reference tutorial overview"
    jurl: /docapis_api_reference_tutorial_overview.html

  - title: "Step 1: Resource description"
    jurl: /docapis_resource_descriptions.html

  - title: "Step 2: Endpoints and methods"
    jurl: /docapis_resource_endpoints.html

  - title: "Step 3: Parameters"
    jurl: /docapis_doc_parameters.html

  - title: "Step 4: Request example"
    jurl: /docapis_doc_sample_requests.html

  - title: "Step 5: Response example and schema"
    jurl: /docapis_doc_sample_responses_and_schema.html

  - title: "Putting it all together"
    jurl: /docapis_finished_doc_result.html

  - title: "Activity: What's wrong with this API reference topic"
    jurl: /docapis_api_whats_wrong_activity.html

  - title: "Activity: Evaluate API reference docs for core elements"
    jurl: /docapis_api_reference_activity.html

- title: "IV: OpenAPI spec and Swagger"
  jurl: /restapispecifications.html
  description: "The OpenAPI specification provides a formal way of describing your REST API and includes all the reference sections mentioned in the previous section, Documenting API endpoints. Display frameworks such as Swagger UI can parse the OpenAPI specification and generate interactive documentation that lets users try out endpoints while learning about the API."
  folderitems:

  - title: Overview of REST API specification formats
    jurl: /pubapis_rest_specification_formats.html

  - title: Introduction to the OpenAPI spec and Swagger
    jurl: /pubapis_swagger_intro.html

  - title: Fastest Way to Create an OpenAPI Specification Document
    jurl: /pubapis_openapis_quickstart_stoplight.html

  - title: Working in YAML
    jurl: /pubapis_yaml.html

  - title: "OpenAPI tutorial overview"
    jurl: /pubapis_openapi_tutorial_overview.html

  - title: "Step 1: The openapi object"
    jurl: /pubapis_openapi_step1_openapi_object.html

  - title: "Step 2: The info object"
    jurl: /pubapis_openapi_step2_info_object.html

  - title: "Step 3: The servers object"
    jurl: /pubapis_openapi_step3_servers_object.html

  - title: "Step 4: The paths object"
    jurl: /pubapis_openapi_step4_paths_object.html

  - title: "Step 5: The components object"
    jurl: /pubapis_openapi_step5_components_object.html

  - title: "Step 6: security object"
    jurl: /pubapis_openapi_step6_security_object.html

  - title: "Step 7: The tags object"
    jurl: /pubapis_openapi_step7_tags_object.html

  - title: "Step 8: The externalDocs object"
    jurl: /pubapis_openapi_step8_externaldocs_object.html

  - title: "Activity: Create an OpenAPI specification document"
    jurl: /pubapis_openapi_activity.html

  - title: Swagger UI tutorial
    jurl: /pubapis_swagger.html

  - title: Swagger UI Demo
    jurl: /pubapis_swagger_demo.html

  - title: Stoplight &mdash; visual modeling tools for creating your spec
    jurl: /pubapis_stoplight.html

  - title: SwaggerHub introduction and tutorial
    jurl: /pubapis_swaggerhub_smartbear.html

  - title: Integrating Swagger UI with the rest of your docs
    jurl: /pubapis_combine_swagger_and_guide.html

  - title: "Create a display using Redoc"
    jurl: /pubapis_redoc.html

- title: "V: Testing API docs"
  jurl: /testingdocs.html
  description: "Testing your documentation is critical to providing accurate, thorough information. With API and developer docs, due to the high level of complexity and engineering requirements, technical writers might be inclined to simply take information that engineers give them and incorporate it wholesale, without personally testing it. Merely playing an editorial/publishing function, however, can reduce your role to that of an engineer's secretary."
  folderitems:

  - title: Overview of testing your docs
    jurl: /testingdocs_overview.html

  - title: Set up a test environment
    jurl: /testingdocs_test_environment.html

  - title: Test all instructions yourself
    jurl: /testingdocs_test_your_instructions.html

  - title: Test your assumptions
    jurl: /testingdocs_testing_assumptions.html

  - title: "Activity: Test your project's documentation"
    jurl: /testingdocs_activity.html

- title: "VI: Conceptual topics in API docs"
  jurl: /docconceptual.html
  description: "While reference topics in APIs generally receive the most attention, the conceptual topics, such as getting started tutorials, information about authorization, rate limiting, status and error codes, quick reference guides, and other topics constitute about half of the documentation. These topics are usually handled by technical writers more than engineers. You can evaluate the quality of API documentation in part by looking to see whether it includes these conceptual topics."
  folderitems:

  - title: API conceptual topics overview
    jurl: /docapis_conceptual_topics_overview.html

  - title: API overview
    jurl: /docapis_doc_overview.html

  - title: API getting started
    jurl: /docapis_doc_getting_started_section.html

  - title: API authentication and authorization
    jurl: /docapis_more_about_authorization.html

  - title: API status and error codes
    jurl: /docapis_doc_status_codes.html

  - title: API rate limiting and thresholds
    jurl: /docapis_rate_limiting_and_thresholds.html

  - title: API quick reference
    jurl: /docapis_doc_quick_reference.html

  - title: API glossary
    jurl: /docapis_glossary_section.html

  - title: API best practices
    jurl: /docapis_best_practices_with_api.html

  - title: "Activity: Complete the SendGrid Getting Started tutorial"
    jurl: /docapis_getting_started_activity.html

  - title: "Activity: Assess the conceptual content in your project"
    jurl: /docapis_concept_activity.html

- title: "VII: Code tutorials"
  jurl: /docapiscode.html
  description: "This section covers strategies for creating code tutorials. I'm still developing out this section, so much of the content is under construction."
  folderitems:

  - title: Common characteristics of code tutorials
    jurl: /docapis_code_tutorials_common_characteristics.html

  - title: Why documenting code is so difficult
    jurl: /docapis_code_difficulty.html

  - title: What research tells us about documenting code
    jurl: /docapiscode_research_on_documenting_code.html

  - title: Five strategies for documenting code
    jurl: /docapis_code_strategies.html

  - title: API code samples
    jurl: /docapis_codesamples_bestpractices.html

  - title: SDKs (software development kits)
    jurl: /docapis_sdks.html

  - title: "Giving feedback on API design and usability"
    jurl: /evaluating-api-design.html

  # - title: Sample apps
  #   jurl: /docapiscode.html

- title: "VIII: Publishing API docs"
  jurl: /publishingapis.html
  description: "API documentation often follows a docs-as-code workflow, where the tools to author and publish documentation align closely with the same tools developers use to write, manage, build, and deploy code. Docs-as-code involves using lightweight formats such as Markdown, collaborating through Git or other version control, building your doc site with a static site generator, and deploying it through a continuous build model, where the build happens on the server when you push commits to a particular branch."
  folderitems:

  - title: Overview for publishing API docs
    jurl: /pubapis_overview.html

  - title: List of 100 API doc sites
    jurl: /pubapis_apilist.html

  - title: Design patterns with API doc sites
    jurl: /pubapis_design_patterns.html

  - title: Docs-as-code tools
    jurl: /pubapis_docs_as_code.html

  - title: More about Markdown
    jurl: /pubapis_markdown.html

  - title: Version control systems (e.g., Git)
    jurl: /pubapis_version_control.html

  - title: Following agile scrum with documentation projects
    jurl: /pubapis_agile_scrum_for_docs.html

  - title: "Activity: Manage content in a GitHub wiki"
    jurl: /pubapis_github_wikis.html

  - title: "Activity: Use the GitHub Desktop Client"
    jurl: /pubapis_github_desktop_client.html

  - title: "Activity: Pull request workflows through GitHub"
    jurl: /pubapis_github_pull_requests.html

  - title: Static site generators
    jurl: /pubapis_static_site_generators.html

  - title: Hosting and deployment options
    jurl: /pubapis_hosting_and_deployment.html

  # - title: Headless CMS options
  #   jurl: /pubapis_headless_cms.html

  - title: "Which tool to choose for API docs &mdash; my recommendations"
    jurl: /pubapis_which_tool_to_choose.html

  - title: Jekyll and CloudCannon continuous deployment tutorial
    jurl: /pubapis_jekyll.html

  - title: "Case study: Switching tools to docs-as-code"
    jurl: /pubapis_switching_to_docs_as_code.html

- title: "IX: Thriving in the API doc space"
  jurl: /jobapis.html
  description: "Getting an API documentation job and thriving requires you to demonstrate your technical aptitude through a writing portfolio. The portfolio should include samples of documentation written for developers. One way to build this portfolio is by working on an open-source project. You also need to live in a tech hub where API documentation jobs are available, such as California, Texas, New York, or Virginia. Overall, thriving in the developer documentation space requires you to continually learn a healthy dose of code, which can be challenging."
  folderitems:

  - title: The job market for API technical writers
    jurl: /jobapis_overview.html

  - title: How much code do you need to know?
    jurl: /jobapis_learning_code.html

  - title: Best locations for API documentation jobs
    jurl: /jobapis_location.html

  - title: "Activity: Find an Open Source Project"
    jurl: /docapis_find_open_source_project.html

  - title: "Activity: Create or fix an API reference documentation topic"
    jurl: /docapis_work_on_conceptual_topic.html

- title: "X: Native library APIs"
  jurl: /nativelibraryapis.html
  description: "Native library APIs refer to Java, C++, or other programming-specific APIs. In this model, rather than making requests across the web for the information, you download a library of code and integrate it into your project. The library is compiled directly into your application's build (rather than accessed through web protocols as with REST APIs). Although this type of API is less common, I include it here in part to clarify what makes REST APIs so different from native library APIs."
  folderitems:

  - title: Overview of native library APIs
    jurl: /nativelibraryapis_overview.html

  - title: Get the sample Java project
    jurl: /nativelibraryapis_getting_the_source.html

  - title: Java crash course
    jurl: /nativelibraryapis_java_crash_course.html

  - title: "Activity: Generate a Javadoc from a sample project"
    jurl: /nativelibraryapis_create_javadoc.html

  - title: Javadoc tags
    jurl: /nativelibraryapis_javadoc_tags.html

  - title: Explore the Javadoc output
    jurl: /nativelibraryapis_exploring_javadoc_output.html

  - title: Make edits to Javadoc tags
    jurl: /nativelibraryapis_editing_javadoc.html

  - title: Doxygen, a document generator mainly for C++
    jurl: /nativelibraryapis_doxygen.html

  - title: Create non-ref docs with native library APIs
    jurl: /nativelibraryapis_nonrefdocs.html

- title: "XI: API glossary and resources"
  jurl: /resources.html
  description: "The API documentation landscape is full of jargon, acronyms, and many new terms. This glossary provides a list of terms and definitions. Additionally, this section contains additional exercises and information, such as more activities for calling APIs, or more info about alternative specifications."
  folderitems:

  - title: Glossary for API documentation
    jurl: /api-glossary.html

  - title:  REST API activities
    jurl: /docapis_more_rest_activities.html

  - title: "Activity: Get event information using the Eventbrite API"
    jurl: /docapis_eventbrite_example.html

  - title: "Activity: Retrieve a gallery using the Flickr API"
    jurl: /docapis_flickr_example.html

  - title: "Activity: Get wind speed using the Aeris Weather API"
    jurl: /docapis_aerisweather_example.html

  - title: RAML tutorial
    jurl: /pubapis_raml.html

  - title: API Blueprint tutorial
    jurl: /pubapis_api_blueprint.html

  - title: API jeopardy answer key
    jurl: /jeopardy_answer_key.html

  - title: What's wrong with this topic answer key
    jurl: /whats_wrong_answer_key.html

  - title: Menlo Park API workshop video recording
    jurl: /menlo_park_workshop_recording.html

  - title: Denver API workshop video recording
    jurl: /denver_workshop_recording.html

  - title: API doc presentation video recordings
    jurl: /api_doc_presentations.html

  #
  # - title: API documentation survey
  #   jurl: /docapis_apidoc_survey.html

  # - title: Course Reviews
  #   jurl: /docapis_course_reviews.html
