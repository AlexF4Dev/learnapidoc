sidebartitle: Document REST APIs

folders:

- title: "Part I: Introduction to REST APIs"
  jurl: /docapis_introtoapis.html
  description: "REST APIs are flourishing in the marketplace, and the web is becoming a mashup of interconnected APIs. REST APIs consist of requests to and responses from a web server. Job prospects are hot for technical writers who can write developer documentation. This course will help you break into API documentation, especially if you complete the many hands-on activities."
  class: first
  folderitems:

  - title: Course Overview
    jurl: /index.html

  - title: Recorded video presentations
    jurl: /docapis_course_videos.html

  - title: Course slides
    jurl: /docapis_course_slides.html

  - title: "Workshop activities"
    jurl: /docapis_workshop_activities.html

  - title: Why I developed this course
    jurl: /docapis_foreword.html

  - title: About the author
    jurl: /docapis_about_the_author.html

  - title: The market for REST API documentation
    jurl: /docapis_intro_to_rest_api_doc.html

  - title: What is a REST API?
    jurl: /docapis_what_is_a_rest_api.html

  - title: "Activity: Identify your goals"
    jurl: /docapis_identify_your_goals.html

- title: "Part II: Using a REST API as a developer"
  jurl: /likeadeveloper.html
  description: "Playing a brief role as a developer will help you understand what's important in API documentation. Developers often use tools such as Postman to make calls. They look at the structure of the response. And they pull out the needed information to integrate them into web pages and other applications."
  folderitems:

  - title: Scenario for using a weather API
    jurl: /docapis_scenario_for_using_weather_api.html

  - title: Get authorization keys
    jurl: /docapis_get_auth_keys.html

  - title: "Submit requests through Postman"
    jurl: /docapis_postman.html

  - title: curl intro and installation
    jurl: /docapis_install_curl.html

  - title: "Make a curl call"
    jurl: /docapis_make_curl_call.html

  - title: Understand curl more
    jurl: /docapis_understand_curl.html

  - title: "Use methods with curl"
    jurl: /docapis_curl_with_petstore.html

  - title: Analyze the JSON response
    jurl: /docapis_analyze_json.html

  - title: Inspect the JSON from the response payload
    jurl: /docapis_json_console.html

  - title: "Access and print a specific JSON value"
    jurl: /docapis_access_json_values.html

  - title: Dive into dot notation
    jurl: /docapis_diving_into_dot_notation.html

- title: "Part III: Documenting API endpoints"
  jurl: /docendpoints.html
  description: "Reference documentation for API endpoints conforms to five general sections: resource descriptions, endpoints and methods, parameters, sample requests, sample responses and schemas. When you document an API, provide detailed information for each of these reference sections."
  folderitems:

  - title: "A new endpoint to document"
    jurl: /docapis_new_endpoint_to_doc.html

  - title: "API reference tutorial overview"
    jurl: /docapis_api_reference_tutorial_overview.html

  - title: "Step 1: Resource description (API ref tutorial)"
    jurl: /docapis_resource_descriptions.html

  - title: "Step 2: Endpoints and methods (API ref tutorial)"
    jurl: /docapis_resource_endpoints.html

  - title: "Step 3: Parameters (API ref tutorial)"
    jurl: /docapis_doc_parameters.html

  - title: "Step 4: Request example (API ref tutorial)"
    jurl: /docapis_doc_sample_requests.html

  - title: "Step 5: Response example and schema (API ref tutorial)"
    jurl: /docapis_doc_sample_responses_and_schema.html

  - title: "Putting it all together"
    jurl: /docapis_finished_doc_result.html

  - title: "Activity: Find an Open Source Project"
    jurl: /docapis_find_open_source_project.html

  - title: "Activity: Evaluate API reference docs for core elements"
    jurl: /docapis_api_reference_activity.html

- title: "Part IV: OpenAPI specification and Swagger"
  jurl: /restapispecifications.html
  description: "The OpenAPI specification provides a formal way of describing your REST API, and includes all the reference sections mentioned in Documenting API endpoints. Display frameworks such as Swagger UI can parse the OpenAPI specification and generate interactive documentation that lets users try out endpoints while learning about the API."
  folderitems:

  - title: Overview of REST API specification formats
    jurl: /pubapis_rest_specification_formats.html

  - title: Introduction to the OpenAPI spec and Swagger
    jurl: /pubapis_swagger_intro.html

  - title: Working in YAML
    jurl: /pubapis_yaml.html

  - title: "OpenAPI tutorial overview"
    jurl: /pubapis_openapi_tutorial_overview.html

  - title: "Step 1: The openapi object (OpenAPI tutorial)"
    jurl: /pubapis_openapi_step1_openapi_object.html

  - title: "Step 2: The info object (OpenAPI tutorial)"
    jurl: /pubapis_openapi_step2_info_object.html

  - title: "Step 3: The servers object (OpenAPI tutorial)"
    jurl: /pubapis_openapi_step3_servers_object.html

  - title: "Step 4: The paths object (OpenAPI tutorial)"
    jurl: /pubapis_openapi_step4_paths_object.html

  - title: "Step 5: The components object (OpenAPI tutorial)"
    jurl: /pubapis_openapi_step5_components_object.html

  - title: "Step 6: security object (OpenAPI tutorial)"
    jurl: /pubapis_openapi_step6_security_object.html

  - title: "Step 7: The tags object (OpenAPI tutorial)"
    jurl: /pubapis_openapi_step7_tags_object.html

  - title: "Step 8: The externalDocs object (OpenAPI tutorial)"
    jurl: /pubapis_openapi_step8_externaldocs_object.html

  - title: "Activity: Create an OpenAPI specification document"
    jurl: /pubapis_openapi_activity.html

  - title: Swagger UI tutorial
    jurl: /pubapis_swagger.html

  - title: Swagger UI Demo
    jurl: /pubapis_swagger_demo.html

  - title: SwaggerHub introduction and tutorial
    jurl: /pubapis_swaggerhub_smartbear.html

  - title: Stoplight &mdash; visual modeling tools for creating your spec
    jurl: /pubapis_stoplight.html

  - title: Integrating Swagger UI with the rest of your docs
    jurl: /pubapis_combine_swagger_and_guide.html

- title: "Part V: Testing your API documentation"
  jurl: /testingdocs.html
  description: "Testing your documentation is critical to providing accurate, thorough information. With API and developer docs, due to the high level of complexity and engineering requirements, technical writers might be inclined to simply take information that engineers give them and incorporate them wholesale, without personally testing them. This can reduce your role to being an engineer's secretary."
  folderitems:

  - title: Overview to testing your docs
    jurl: /testingdocs_overview.html

  - title: Set up a test environment
    jurl: /testingdocs_test_environment.html

  - title: Test all instructions yourself
    jurl: /testingdocs_test_your_instructions.html

  - title: Test your assumptions
    jurl: /testingdocs_testing_assumptions.html

  - title: "Activity: Test your project's documentation"
    jurl: /testingdocs_activity.html

- title: "Part VI: Documenting non-reference sections"
  jurl: /docnonref.html
  description: "While reference topics in API generally receive the most attention, the non-reference topics, such as getting started tutorials, information about authorization, rate limiting, status and error codes, quick reference guides, and more constitute about half the documentation. These topics are usually handled more by technical writers than engineers. You can evaluate documentation by looking to see whether it includes these non-reference topics."
  folderitems:

  - title: User guide topics
    jurl: /docapis_create_user_guide.html

  - title: API overview
    jurl: /docapis_doc_overview.html

  - title: Getting started tutorial
    jurl: /docapis_doc_getting_started_section.html

  - title: Authentication and authorization
    jurl: /docapis_more_about_authorization.html

  - title: Status and error codes
    jurl: /docapis_doc_status_codes.html

  - title: Rate limiting and thresholds
    jurl: /docapis_rate_limiting_and_thresholds.html

  - title: Code samples and tutorials
    jurl: /docapis_codesamples_bestpractices.html

  - title: SDKs and sample apps
    jurl: /docapis_sdks_and_sample_apps.html

  - title: Quick reference guide
    jurl: /docapis_doc_quick_reference.html

  - title: API best practices
    jurl: /docapis_best_practices_with_api.html

  - title: API Glossary
    jurl: /docapis_glossary_section.html

  - title: "Activity: Assess the non-reference content in your project"
    jurl: /docapis_nonref_activity.html

- title: "Part VII: Publishing your API documentation"
  jurl: /publishingapis.html
  description: "API documentation often follows a docs-as-code workflow, where the tools to author and publish documentation align closely with the same tools developer use to write code. This involves using lightweight formats such as Markdown, collaborating with Git or other version control, building your doc site with a static site generator, and deploying it through a continuous build model, where the build happens on the server when you push to a particular branch."
  folderitems:

  - title: Overview for publishing API docs
    jurl: /pubapis_overview.html

  - title: List of 100 API doc sites
    jurl: /pubapis_apilist.html

  - title: Design patterns with API doc sites
    jurl: /pubapis_design_patterns.html

  - title: Docs-as-code tools
    jurl: /pubapis_docs_as_code.html

  - title: More about Markdown
    jurl: /pubapis_markdown.html

  - title: Version control systems (such as Git)
    jurl: /pubapis_version_control.html

  - title: Static site generators
    jurl: /pubapis_static_site_generators.html

  - title: Hosting and deployment options
    jurl: /pubapis_hosting_and_deployment.html

  - title: Headless CMS options
    jurl: /pubapis_headless_cms.html

  - title: "Which tool to choose for API docs &mdash; my recommendations"
    jurl: /pubapis_which_tool_to_choose.html

  - title: "Activity: Manage content in a GitHub wiki"
    jurl: /pubapis_github_wikis.html

  - title: "Activity: Use the GitHub Desktop Client"
    jurl: /pubapis_github_desktop_client.html

  - title: Pull request workflows through GitHub
    jurl: /pubapis_github_pull_requests.html

  - title: Jekyll and CloudCannon continuous deployment
    jurl: /pubapis_jekyll.html

  - title: "Case study: Switching tools to docs-as-code"
    jurl: /pubapis_switching_to_docs_as_code.html


- title: "Part VIII: Getting a Job in API Documentation"
  jurl: /jobapis.html
  description: "Getting a job in API documentation requires you to demonstrate your techncial aptitude through a writing portfolio. The portfolio should include samples of documentation written for developers. One way to build this portfolio by working on an open-source project. Overall, thriving in the developer documentation space requires you to continually learn a healthy dose of code, which can be challenging."
  folderitems:

  - title: The job market for API technical writers
    jurl: /jobapis_overview.html

  - title: How much code do you need to know?
    jurl: /jobapis_learning_code.html

  - title: Locations for API doc writer jobs
    jurl: /jobapis_location.html

- title: "Part IX: Documenting native library APIs"
  jurl: /nativelibraryapis.html
  description: "Native library APIs refer to Java, C++, or other programming specific APIs. In this model, rather than making requests across the web for the information, you download a library of code an integrate it into your project. The library is compiled into your application's build. Although this type of API is less common, I include it here in part to clarify what makes REST (or web) APIs so different."
  folderitems:

  - title: Overview of native library APIs
    jurl: /nativelibraryapis_overview.html

  - title: Get the Java source
    jurl: /nativelibraryapis_getting_the_source.html

  - title: Java crash course
    jurl: /nativelibraryapis_java_crash_course.html

  - title: "Activity: Generate a Javadoc from a sample project"
    jurl: /nativelibraryapis_create_javadoc.html

  - title: Javadoc tags
    jurl: /nativelibraryapis_javadoc_tags.html

  - title: Explore the Javadoc output
    jurl: /nativelibraryapis_exploring_javadoc_output.html

  - title: Make edits to Javadoc tags
    jurl: /nativelibraryapis_editing_javadoc.html

  - title: Doxygen, a document generator mainly for C++
    jurl: /nativelibraryapis_doxygen.html

  - title: Create non-ref docs with native library APIs
    jurl: /nativelibraryapis_nonrefdocs.html


- title: "Part X: Glossary and additional resources"
  jurl: /resources.html
  description: "The API documentation landscape is full of jargon, acronyms, and many new terms. This glossary provides a list of terms and definitions. Additionally, this section contains additional exercises and information, such as more activities calling APIs, or more info about alternative specifications."
  folderitems:

  - title: Glossary
    jurl: /api-glossary.html

  - title:  REST API exercises
    jurl: /docapis_more_rest_exercises.html

  - title: "Activity: Get event information using the EventBrite API"
    jurl: /docapis_eventbrite_example.html

  - title: "Activity: Retrieve a gallery using the Flickr API"
    jurl: /docapis_flickr_example.html

  - title: "Activity: Get wind speed using the Aeris Weather API"
    jurl: /docapis_aerisweather_example.html

  - title: RAML tutorial
    jurl: /pubapis_raml.html

  - title: API Blueprint tutorial
    jurl: /pubapis_api_blueprint.html



  #
  # - title: API documentation survey
  #   jurl: /docapis_apidoc_survey.html

  # - title: Course Reviews
  #   jurl: /docapis_course_reviews.html
